---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { slugify } from "@/utils";

export const getStaticPaths = (async () => {
  const tagStats = await getCollection("tagStats");
  const stats = tagStats[0].data;

  const paths = [];

  for (const [repo, vaultTags] of Object.entries(stats.vaultTags)) {
    for (const tag of vaultTags) {
      paths.push({
        params: { repo: slugify(repo), tag },
        props: { tagInfo: stats.tags[tag] },
      });
    }
  }
  return paths;
}) satisfies GetStaticPaths;

const { repo, tag } = Astro.params;
const { tagInfo } = Astro.props;
const notes = await getCollection(
  "obsidianNotes",
  (note) => note.data.repo === repo && note.data.tags?.includes(tag),
);
---

<Layout>
  <pre
    class="w-96">
    {JSON.stringify(tagInfo.notes)}
    <hr />
    {JSON.stringify(notes)}
  </pre>
  <ul>
    {notes.map((note) => <a href={`/${repo}/`}>{note.data.title}</a>)}
  </ul>
</Layout>
