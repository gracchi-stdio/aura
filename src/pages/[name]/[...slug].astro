---
import type { GetStaticPaths } from "astro";
import { getConfig } from "@/lib/config";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { render } from "astro:content";
import { slugify } from "@/utils";

export const getStaticPaths = (async () => {
  const { vaults } = getConfig();
  const paths = [];

  const entries = await getCollection("obsidianNotes");
  for (const vault of vaults) {
    try {
      for (const entry of entries.filter(
        (note) => note.data.repo === vault.repo,
      )) {
        paths.push({
          params: {
            name: slugify(vault.repo),
            slug: entry.id === "index.md" ? undefined : entry.data.slug,
          },
          props: {
            entry,
            vault,
          },
        });
      }
    } catch (error) {
      console.error(`The vault collection: ${vault.repo} not available`);
    }
  }

  return paths;
}) satisfies GetStaticPaths;

const { entry, vault } = Astro.props;
const { Content } = await render(entry);
---

<Layout {vault}>
  <article class="container mx-auto p-4 prose prose-slate">
    <h1>{entry.data.title}</h1>

    <Content />
  </article>
</Layout>
